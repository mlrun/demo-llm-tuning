kind: project
metadata:
  name: mlopspedia-bot-admin
  created: '2023-05-18T06:51:30.728000'
spec:
  functions:
  - url: src/data_collection.py
    name: data-collecting
    kind: job
  - url: src/data_preprocess.py
    name: data-preparing
    kind: job
  - url: src/trainer.py
    name: mpi-training
    kind: mpijob
    image: yonishelach/mlrun-hf-gpu
  - url: src/trainer.py
    name: training
    kind: job
  - name: serving
    spec:
      kind: serving
      metadata:
        name: serving
        project: mlopspedia-bot-admin
      spec:
        command: ''
        args: []
        image: yonishelach/mlrun-hf-gpu
        build:
          functionSourceCode: 
          source: ./
          commands: []
          code_origin: git://github.com/yonishelach/learn-docs.git#refs/heads/main#0156313d8ad3a8c3adde87aed83492e629a84048
          origin_filename: src/serving.py
        description: ''
        default_handler: ''
        disable_auto_mount: false
        env: []
        resources:
          requests:
            memory: 1Mi
            cpu: 25m
          limits:
            nvidia.com/gpu: 1
        image_pull_secret: docker-registry-admin-creds
        priority_class_name: igz-workload-medium
        preemption_mode: prevent
        min_replicas: 1
        max_replicas: 4
        source: ''
        function_kind: serving_v2
        readiness_timeout: 3000
        function_handler: serving:handler
        base_image_pull: false
        graph:
          steps:
            preprocess:
              kind: task
              handler: preprocess
              after: []
            mlopspedia:
              kind: task
              class_name: LLMModelServer
              class_args:
                model_class: GPT2LMHeadModel
                tokenizer_class: GPT2Tokenizer
                model_path: store://artifacts/mlopspedia-bot-admin/gpt2-medium-mlrun
                use_deepspeed: true
              after:
              - preprocess
            postprocess:
              kind: task
              handler: postprocess
              after:
              - mlopspedia
            toxicity-classifier:
              kind: task
              class_name: ToxicityClassifierModelServer
              class_args:
                threshold: 0.7
              after:
              - postprocess
              responder: true
          engine: async
        secret_sources: []
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: app.iguazio.com/lifecycle
                  operator: NotIn
                  values:
                  - preemptible
                - key: eks.amazonaws.com/capacityType
                  operator: NotIn
                  values:
                  - SPOT
                - key: node-lifecycle
                  operator: NotIn
                  values:
                  - spot
        tolerations: null
        security_context: {}
      verbose: false
  workflows:
  - path: src/training_workflow.py
    name: training_workflow
  artifacts: []
  conda: ''
  source: git://github.com/yonishelach/learn-docs.git#main
  origin_url: git://github.com/yonishelach/learn-docs.git#refs/heads/main
  load_source_on_run: true
  desired_state: online
  owner: admin
  default_image: yonishelach/mlrun-hf
status:
  state: online
